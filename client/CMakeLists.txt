CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

# Set the build type
SET(OAS_DEFAULT_CMAKE_BUILD_TYPE RelWithDebInfo)

IF(DEFINED CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel")
ELSE()
   SET(CMAKE_BUILD_TYPE ${OAS_DEFAULT_CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.")
ENDIF()

# Start defining the project
PROJECT (OAS_CLIENT)

# Set version numbers
SET(OAS_CLIENT_MAJOR_VERSION 0)
SET(OAS_CLIENT_MINOR_VERSION 9)
SET(OAS_CLIENT_VERSION "${OAS_CLIENT_MAJOR_VERSION}.${OAS_CLIENT_MINOR_VERSION}")

# Set cmake module path
SET(CMAKE_MODULE_PATH "${OAS_CLIENT_SOURCE_DIR}/CMakeModules;${CMAKE_MODULE_PATH}")

# Determine if we should use lib or lib64
SET(LIBDIR "lib")
IF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
    SET(LIBDIR "lib64")
ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")


SET(TARGET_H
    ${OAS_CLIENT_SOURCE_DIR}/src/OASClientInterface.h
    ${OAS_CLIENT_SOURCE_DIR}/src/OASSound.h
    )

SET(TARGET_SRC
    ${OAS_CLIENT_SOURCE_DIR}/src/OASClientInterface.cpp
    ${OAS_CLIENT_SOURCE_DIR}/src/OASSound.cpp
    ${OAS_CLIENT_SOURCE_DIR}/src/OASSoundListener.cpp
    )

INCLUDE_DIRECTORIES(src)

# Set the location of the library output directory
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/${LIBDIR})

# Find relevant packages
FIND_PACKAGE(DOXYGEN)

IF(DOXYGEN_FOUND)
    SET(OAS_CLIENT_DOCUMENTATION_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/docs)

    CONFIGURE_FILE(${OAS_CLIENT_DOCUMENTATION_DIRECTORY}/Doxyfile.in
        ${OAS_CLIENT_DOCUMENTATION_DIRECTORY}/Doxyfile @ONLY
    )

    ADD_CUSTOM_TARGET(docs ${DOXYGEN_EXECUTABLE}
        ${OAS_CLIENT_DOCUMENTATION_DIRECTORY}/Doxyfile 
        WORKING_DIRECTORY ${OAS_CLIENT_DOCUMENTATION_DIRECTORY}
        COMMENT "Generating API documentation with Doxygen" VERBATIM
    )
ENDIF(DOXYGEN_FOUND)

ADD_LIBRARY(oasclient SHARED ${TARGET_SRC} ${TARGET_H})

INSTALL(TARGETS oasclient DESTINATION "${CMAKE_INSTALL_PREFIX}/${LIBDIR}")

INSTALL(FILES ${TARGET_H} DESTINATION ${CMAKE_INSTALL_PREFIX}/include)

