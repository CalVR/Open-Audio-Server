Open Audio Server
=================

Dependencies:
-------------

* CMake (minimum v2.8) for the build system

* OpenAL for the backend audio processing 
  http://kcat.strangesoft.net/openal.html

* ALUT for file loading and OpenAL context management
  http://connect.creativelabs.com/openal/Downloads/ALUT/

* MXML (Minimal XML) library for XML parsing
  http://www.minixml.org/

* Optional, but highly recommended: FLTK (v1.3.0) for the GUI 
  http://www.fltk.org/


Installation:
-------------

1.  Change to the build directory, with `cd build`
2.  If you want to configure build options yourself, type `ccmake ..`
    Otherwise, if you want to go with default options, type `cmake ..`
3.  Assuming everything went okay with configuration, you can then compile with
   `make`. With sudo priviledges, you can also install with `make install`
4.  (Optional) To generate documentation with Doxygen, use `make docs`


Set-Up:
-------

Before running the server, you will want to set some runtime options, such as
which port you want the server to listen for connections on. Look at the sample
configuration file `sample_oas_config.xml` to view this and other server 
options.


Running:
--------

Pass the path to your XML configuration file as a command line argument to your
OAS binary executable (i.e. "OAS ~/oas_config.xml")


Usage:
------

The server uses a plain-text (ASCII) based communication protocol to receive
instructions from the client. This allows the client to be even a simple telnet
connection, if desired. To make the client application developer's life easier,
a client API for C++ has also been created. See the ../client/ directory of this 
project for more information.


Client-Server Communication Protocol:
-------------------------------------

Alternatively, if you want to roll your own client interface to communicate with
the server, or if you are developing in a language other than C++, here it is:


--------------------------------------------------------------------------------
        Message         |                      Description
------------------------|-------------------------------------------------------
GHDL filename           | Get a handle for a sound source for the <filename>
                        | If <filename> cannot be found in the server's cache
                        | directory, or a sound source cannot be created for
                        | <filename>, the server will respond with "-1".
                        | Otherwise, the response will be a handle number, with
                        | values "0", "1", "2", "3", etc.
------------------------|-------------------------------------------------------
WAVE type frq phase dur | Generate a new sound source based on the specified
                        | simple waveform. Similar to GHDL, the server will
                        | respond with a non-negative integer value in ASCII
                        | form on success, which will be the handle for the
                        | generated source. On failure, the server will respond
                        | with "-1".
                        | These values for <type> are available:
                        |   sinusoidal (type = "1"), square (type = "2"),
                        |   sawtooth (type = "3"), whitenoise (type = "4"),
                        |   impulse (type = "5")
                        | Any other values for <type> will not create a sound.
                        | <frq> specifies the frequency of the waveform.
                        | <phase> specifies the phase shift of the waveform
                        | <dur> is the duration of the sound in seconds.
------------------------|-------------------------------------------------------
RHDL handle             | Release resources allocated for the source # <handle>
------------------------|-------------------------------------------------------
PLAY handle             | Play the source specified by <handle>. If the source
                        | is already playing, this will do nothing. 
------------------------|-------------------------------------------------------
STOP handle             | Stop the source specified by <handle>. The playback
                        | position is reset to the beginning.
------------------------|-------------------------------------------------------
SSPO handle x y z       | Set the sound's position to <x, y, z>. The position
                        | values can be floating point.
------------------------|-------------------------------------------------------
SSVE handle x y z       | Set the sound's velocity to <x, y z>. These values
                        | are only used for doppler effect calculations. OpenAL
                        | does not use the velocity for updating the sound's
                        | position, and OAS conforms to this spec. See the 
                        | doppler effect section for more information on how
                        | it works in OAS and OpenAL.
------------------------|-------------------------------------------------------
SSVO handle gain        | Set the sound's gain (volume) to <gain>. 0 will mute, 
                        | default is 1. The <gain> value can be floating point.
------------------------|-------------------------------------------------------
SSLP handle doLoop      | Set the sound to loop or disable looping. A sound
                        | with looping enabled will playback from the beginning
                        | immediately after it is finished playing all the way
                        | through. The <doLoop> value can be boolean values of 
                        | 0 or 1, with 1 enabling looping, and 0 disabling it. 
------------------------|-------------------------------------------------------
SSDI handle x y z       | Set the sound's direction. This will make the sound
                        | source directional, so that if the directional sound
                        | is not pointing at the listener, then the listener
                        | will not hear the sound at full volume. If the sound
                        | is pointing completely away from the listener, then
                        | the sound becomes completely muted. <x, y, z> can
                        | be floating point values.
------------------------|-------------------------------------------------------
SSDI handle angle       | Set the sound's direction, but only in the X-Z plane,
                        | using a sine and cosine decomposition of <angle>. It
                        | should be a floating point value, and in radians.
------------------------|-------------------------------------------------------
SSDV handle angle gain  | Set the sound's direction via <angle> (see SSDI with
                        | angle parameter, above), plus also set the sound's 
                        | gain.
------------------------|-------------------------------------------------------
SPIT handle pitch       | Set the sound's pitch. A value of 1 is the default.
                        | Doubling the <pitch> will increase the pitch of the
                        | sound by one octave, and halving the <pitch> will
                        | drop the sound by one octave. Setting the pitch works
                        | by modifying the playback speed, so a sound with
                        | higher pitch will also play at a faster speed (and
                        | vice versa).
------------------------|-------------------------------------------------------
FADE handle gain time   | Fade the sound's current gain value to the specified
                        | <gain> value, over the duration <time>, in seconds.
                        | This can be used to slowly fade a sound's volume
                        | in or out, such as when introducing objects/scenes
                        | or transitioning between different objects/scenes.
                        | Both <gain> and <time> can be floating point.
------------------------|-------------------------------------------------------
SLPO x y z              | Set the listener's position to <x, y, z>, in the same
                        | coordinate system as the sound sources. <x, y, z> can
                        | be floating point values. The default is <0, 0, 0>.
------------------------|-------------------------------------------------------
SLVE x y z              | Set the listener's velocity to <x, y, z>. These
                        | values are only used for calculating the doppler
                        | effect. OpenAL does not update the position of the
                        | listener based on the velocity, and OAS conforms to
                        | this specification. See the section on the doppler
                        | effect for more information.
------------------------|-------------------------------------------------------
SLOR aX aY aZ uX uY uZ  | Set the listener's orientation using two vectors.
                        | The first, <aX, aY, aZ>, specifies the "look-at"
                        | direction. The second, <uX, uY, uZ>, specifies the
                        | "up" direction. The defaults are <0, 0,-1> for the
                        | look-at vector, and <0, 1, 0> for the up vector.
------------------------|-------------------------------------------------------

SSDR handle angle       | (deprecated) Set the sound's direction relative to
                        | the listener

SSRV handle angle gain  | (deprecated) Set the sound's direction relative to
                        | the listener using <angle> in radians, and the gain, 
                        | in one command.

SSRV handle x y z gain  | (deprecated) Set the sound's direction relative to
                        | the listener using <x, y, z> coordinates, and the
                        | gain, in one command.

SSVE handle speed       | (deprecated) Set the sound's speed, using the 



